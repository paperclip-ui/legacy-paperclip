#!/usr/bin/env node
const path = require("path");
const resolve = require("resolve");
const chokidar = require("chokidar");
const glob = require("glob");
const {init, devStart} = require("../lib/cli");
const {build} = require("paperclip-cli-minimal");
const fs = require("fs");
const {start: startWorkspace} = require("tandem-workspace/lib/server");

const argv = require("yargs")
.command("build", "Compiles paperclip files to target language", yargs => {
  yargs
  .option("watch", desc("watch for changes"))
  .option("print", desc("Only print compiled output"))
  .option("only", desc("Target files to generate"))
  .option("silent", desc("silence output information"))
  .option("output", desc("output directory of files"))
  .option("compiler", desc("Language compiler target (default is from paperclip.config.json if found)"))
}, argv => {
  build({
    cwd: process.cwd(),
    config: argv.config,
    print: argv.print,
    output: argv.output,
    css: argv.css,
    watch: argv.watch,
    definition: argv.definition,
    only: argv.only && argv.only.split(",").map(v => v.trim()),
    verbose: !argv.silent,
    dropPcExtension: argv.dropPcExtension,
    compilerName: argv.compiler,
    filePatterns: argv.filePattern
  })
})
.command("init", "Initialize new paperclip project", yargs => {
}, argv => {
  init();
})
.command("designer", "Starts the designer server", yargs => {
  yargs
  .option("port", desc("HTTP port to listen on"))
  .option("file", desc("File to open initiall"))
  .default("port", 4000)
  .default("open", true)
}, argv => {
  startWorkspace({
    http: {
      port: argv.port
    },
    openFile: argv.file,
    project: {
      installDependencies: false
    },
    standalone: true,
    showFullEditor: false
  }).then((workspace) => {
    workspace.start(process.cwd()).then(project => {
      project.openBrowser();
    });
  });
})
.argv;



function desc(description) {
  return {
    description
  }
}
