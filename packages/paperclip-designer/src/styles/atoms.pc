<!-- TODO - values should be based on polaris -->
<import src="components/Theme/index.pc" inject-styles />

<style>
  @export {
    * {
      box-sizing: border-box;
    }

    @mixin ease-in {
      transition: 0.2s;
    }

    .code {
      font-family: Roboto, Monaco, sans-serif;
      letter-spacing: 0.1em;
      font-size: 13px;
    }

    .font-regular {
      font-family: Open Sans, sans-serif;
    }

    .button-reset {
      border: none;
      color: inherit;
      letter-spacing: inherit;
      background: none;
      margin: 0;
      padding: 0;
    }

    /*
       https://www.figma.com/file/dOQZzseI3v7LUEwXjAKw4I/Polaris-for-Admin%3A-Colors-(Community)?node-id=2989%3A2
    */
    :root {
      --surface-default: transparent;
      --surface-subdued: transparent;
      --surface-hovered: transparent;
      --surface-pressed: transparent;
      --surface-depressed: transparent;
      --surface-disabled: transparent;
      --surface-selected-default: transparent;
      --surface-selected-hovered: transparent;
      --surface-selected-pressed: transparent;
      --surface-warning-default: transparent;
      --surface-warning-subdued: transparent;
      --surface-warning-hovered: transparent;
      --surface-warning-pressed: transparent;
      --surface-critical-default: transparent;
      --surface-critical-subdued: transparent;
      --surface-critical-hovered: transparent;
      --surface-critical-pressed: transparent;
      --surface-critical-depressed: transparent;
      --surface-success-default: transparent;
      --surface-success-subdued: transparent;
      --surface-success-hovered: transparent;
      --surface-success-pressed: transparent;
      --surface-highlight-default: transparent;
      --surface-highlight-subdued: transparent;
      --surface-highlight-hovered: transparent;
      --surface-highlight-pressed: transparent;
      --surface-neutral-default: transparent;
      --surface-neutral-subdued: transparent;
      --surface-neutral-hovered: transparent;
      --surface-neutral-pressed: transparent;
      --surface-neutral-depressed: transparent;
      --surface-neutral-disabled: transparent;
      --surface-primary-selected: transparent;
      --surface-primary-hovered: transparent;
      --surface-primary-pressed: transparent;
    }

    :root {
      --text-default: black;
      --text-subdued: black;
      --text-disabled: black;
      --text-critical: black;
      --text-warning: black;
      --text-success: black;
      --text-highlight: black;
      --text-on-interactive: white;
      --text-on-primary: white;
      --text-on-critical: white;
    }

    :root {
      --icon-default: black;
      --icon-subdued: black;
      --icon-hovered: black;
      --icon-pressed: black;
      --icon-disabled: black;
      --icon-critical: black;
      --icon-warning: black;
      --icon-success: black;
      --icon-highlight: black;
      --icon-on-interactive: black;
      --icon-on-primary: black;
      --icon-on-critical: black;
    }

    :root {
      --interactive-default: black;
      --interactive-hovered: black;
      --interactive-depressed: black;
      --interactive-disabled: black;
      --interactive-critical: black;
      --interactive-critical-hovered: black;
      --interactive-critical-depresed: black;
      --interactive-critical-disabled: black;
    }

    :root {
      --border-default: black;
      --border-subdued: black;
      --border-hovered: black;
      --border-depressed: black;
      --border-disabled: black;
      --border-box-subdued: black;
      --border-critical-default: black;
      --border-critical-subdued: black;
      --border-critical-disabled: black;
      --border-success-default: black;
      --border-success-subdued: black;
      --border-highlight-default: black;
      --border-highlight-subdued: black;
    }

    :root {
      --focused-default: black;
    }

    :root {
      --spacing-1: 2px;
      --spacing-2: 4px;
      --spacing-3: 8px;
      --spacing-4: 12px;
      --spacing-5: 16px;
      --spacing-6: 24px;
      --spacing-7: 32px;
      --spacing-8: 40px;
      --spacing-9: 48px;
      --spacing-10: 64px;
      --spacing-11: 80px;
      --spacing-12: 96px;
      --spacing-13: 160px;
    }

    :root {
      --radius-1: var(--spacing-1);
      --radius-2: var(--spacing-2);
      --radius-3: var(--spacing-3);
      --raduis-4: var(--spacing-4);
    }
  }
</style>


<!--
  @frame { visible: false }
-->
<div component as="Color" style="--value: {value}">
  <style>
    border-radius: var(--radius-3);
    background-color: var(--value);
    width: 50px;
    height: 50px;
  </style>
</div>

<!--
  @frame { visible: false }
-->
<div component as="Section">
  <h4>{title}</h4>
  <div>
    <style>
      display: flex;
      grid-column-gap: var(--spacing-5);
    </style>
    {children}
  </div>
</div>

<!--
  @frame { visible: false, title: "DS", width: 1024, height: 768, x: 1306, y: -7 }
-->
<div>
  <style>
    padding: var(--spacing-5);
  </style>
  <Section title="Colors">
    <Color value="var(--gray-gray-50)" />
    <Color value="var(--gray-gray-50)" />
    <Color value="var(--gray-gray-50)" />
  </Section>
</div>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 128, y: -66 }
-->
fddsfs