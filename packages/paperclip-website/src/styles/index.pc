<import src="./colors.pc" />
<import src="./typography.pc" as="typography" />
<import src="./layout.pc" as="layout" inject-styles />
<import src="./button.pc" as="button" />
<import src="./icons/icons.pc" as="icons" />

<!--  You should be able to <i>see</i> what you're building in
  realtime, and that's what Paperclip provides - tooling to
  build your UIs <i>visually</i>. No more need to jump back
  and forth between the browser and code.

-->
<style>
  :root {
    --row-max-width: 1800px;
  }
  * > :global(strong) {
    font-weight: 600;
  }
  * > :global(a) {
    color: rgb(102, 163, 241);
  }
  @export {
    ._emoji {}
  }
  @mixin mobile {
    @media screen and (max-width: 900px) {
      @content;
    }
  }
  @mixin tiny {
    @media screen and (max-width: 430px) {
      @content;
    }
  }
  @mixin section-icon {
    margin-right: 8px;
    flex-shrink: 0;
    font-size: 1.7em;
    position: relative;
  }
</style>




<!--
  @frame { visible: false }
-->
<div export component as="Home" class="_home $typography.text-default">
  <style>
    background: rgb(245, 245, 245);
    line-height: 1.6em;
    * {
      box-sizing: border-box;
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<layout.Container export component as="Header">
  <style>

    background: rgb(48, 50, 56);
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    @include mobile {}
  </style>
  <div>
    <style>
      max-width: var(--row-max-width);
      margin: 0px auto;
      padding: 32px;
    </style>
    <div data-pc-label="Info">
      <style>
        padding-top: 140px;
        display: flex;
        flex-direction: column;
        grid-row-gap: 32px;
        @include mobile {
          flex-direction: column;
        }
      </style>
      <div>
        <style>
          margin: 0px auto;
          text-align: center;
          padding: 32px 0px;
          max-width: 700px;
        </style>
        <div>
          <style>
            color: rgba(255, 255, 255, 0.9);
            font-size: 1.5em;
            line-height: 1.6em;
            margin-bottom: var(--gap-5);
            font-weight: 400;
            letter-spacing: 0.04em;
            @include typography.text-secondary {}
          </style>
          {title}
        </div>
        <div>
          <style>
            color: rgba(255, 255, 255, 0.9);
            font-weight: 500;
            letter-spacing: 0.075em;
            line-height: 1.8em;
            display: none;
            font-size: 1.1em;
            ._emoji {
              color: rgba(255, 255, 255, 1);
            }
          </style>
          {description}
        </div>
        <div class="_cta">
          <style>
            margin-top: 15px;
            :global(a) {
              margin-right: 15px;
              margin-top: 15px;
              @include tiny {
                width: 100%;
                box-sizing: border-box;
                margin-right: 0;
              }
              &:first-child {
                margin-left: 0;
              }
            }
          </style>
          {cta}
        </div>
      </div>
      {preview}
    </div>
  </div>
</layout.Container>

<!--
  @frame { visible: false, width: 1024, height: 768, x: 0, y: 0 }
-->
<div export component as="HeaderExamples">
  <style>
    display: flex;
    grid-column-gap: 32px;
    grid-row-gap: 32px;
    align-items: center;
    position: relative;
    :global(& > :first-child) {
      width: 100%;
    }
    :global(& > :last-child) {
      width: 100%;
    }

    @media screen and (max-width: 1400px) {
      flex-direction: column;
    }


    :global(.prism-code, ._code-preview) {
      && {
        height: 550px;
      }
    }
  </style>
  {left}
  <img src="./assets/import-graphic-2.svg">
    <style>




      height: 150px;
      flex: 0;
      @include mobile {}
    </style>
  </img>
  {right}
</div>

<!--
  @frame { visible: false }
-->
<div component as="CodePreview" class="_code-preview">
  <style>
    width: 100%;
    height: 100%;
    min-width: 600px;
    min-height: 200px;
    background: rgb(221, 221, 221);
    border-radius: 6px;
  </style>
</div>


<!--
  @frame { visible: false }
-->
<div export component as="Summary" class="_summary $layout._row">
  <style>
    border-top: 1px solid rgb(226, 226, 226);
    border-bottom: 1px solid rgb(226, 226, 226);
    @include layout.py-6 {}
  </style>
  <div class="$layout._col12">
    <div class="_title">
      <style>
        font-size: 1.4em;
        font-weight: 500;
        margin-bottom: var(--gap-4);
        @include typography.text-secondary {}
      </style>
      {title}
    </div>
    <div class="_text">
      <style>
        font-size: 20px;
        line-height: 1.6em;
        font-weight: 400;
      </style>
      {text}
    </div>
  </div>
</div>



<!--
  @frame { visible: false }
-->
<div export component as="CTABottom">
  <style>
    background: rgb(74, 77, 87);
    color: rgba(255, 255, 255, 0.9);
    @include layout.py-6 {}
    :global(a) {
      color: rgb(151, 196, 255);
    }
  </style>
  <div class="_row">
    <style>
      display: flex;
      max-width: 1000px;
      text-align: center;
    </style>

    <!-- here just for spacing -->
    <icons.Icon name="grow" class="$_icon">
      <style>
        visibility: hidden;
        @include section-icon {}
      </style>
    </icons.Icon>
    <div>
      <div class="_title">
        <style>
          font-size: 1.7em;
          font-weight: 500;
          margin-bottom: var(--gap-5);
          @include typography.text-secondary {}
        </style>
        {title}
      </div>
      <div class="_text">
        <style>
          font-size: 20px;
          line-height: 1.6em;
          font-weight: 400;
        </style>
        {description}
      </div>

      <div>
        <style>
          margin-top: 32px;
          display: flex;
          flex-direction: column;
          grid-row-gap: 16px;
          align-items: center;
        </style>
        {actions}
      </div>
    </div>
  </div>
  <div class="_col2" />
</div>

<div export component as="CTAInstall">
  <style>
    display: flex;
    align-items: center;
    grid-column-gap: 16px;
  </style>
  <span>
    <style>
      font-weight: 600;
    </style>
    {label}
  </span>
  <div>
    <style>
      background: rgb(224, 224, 224);
      color: rgb(48, 50, 56);
      border: 1px solid grey;
      display: inline-block;
      padding: 8px 16px;
      border-radius: 4px;
      width: 500px;
      @include mobile {
        width: auto;
      }
    </style>
    {children}
  </div>
</div>

<!--
  @frame { visible: false }
-->
<div export component as="MainFeatures" class="_main-features $layout._row">
  <style>
    border-top: 1px solid rgb(226, 226, 226);
    border-bottom: 1px solid rgb(226, 226, 226);
    display: none;
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="MainFeatureItem"
  class="_item $layout._col $layout._col6">
  <style>
    display: flex;
    flex-direction: column;
    @include layout.py-6 {}
    :self(:first-child) {
      border-right: 1px solid rgb(226, 226, 226);
      padding-right: 30px;
      @include mobile {
        padding-right: 0px;
        border-right: 0px;
      }
    }

    :self(:last-child) {
      border-left: 1px solid rgb(255, 255, 255);
      padding-left: 30px;
      @include mobile {
        padding-top: 0px;
        padding-left: 0px;
        border-left: 0;
      }
    }
  </style>
  <div class="_heading">
    <style>
      display: flex;
    </style>
    <icons.Icon name={iconName} class="$_icon">
      <style>
        @include section-icon {}
      </style>
    </icons.Icon>
    <div class="_info">
      <style>
        display: flex;
        flex-direction: column;
      </style>
      <div class="_title">
        <style>
          font-size: 1.2em;
          display: flex;
          font-weight: 500;
          margin-bottom: var(--gap-4);
          @include typography.text-secondary {}
        </style>
        <span>{title}</span>
      </div>
      <div class="_details">
        <style>
          margin-bottom: 2em;
          height: 80px;
        </style>
        {description}
      </div>
    </div>
  </div>
  <div class="_example">
    <style>
      font-size: 14px;
      :global(.prism-code) {
        max-height: 400px;
      }
      :global(.prism-code > div) {}
    </style>
    {example}
  </div>
</div>


<!--
  @frame { visible: false }
-->
<div export component as="HeaderFeatureItem">
  <style>
    display: flex;
    flex-direction: column;
    @include layout.py-6 {}
  </style>
  <div class="_heading">
    <style>
      display: flex;
    </style>
    <icons.Icon name={iconName} class="$_icon">
      <style>
        @include section-icon {}
      </style>
    </icons.Icon>
    <div class="_info">
      <style>
        display: flex;
        flex-direction: column;
      </style>
      <div class="_title">
        <style>
          font-size: 1.2em;
          display: flex;
          font-weight: 500;
          margin-bottom: var(--gap-4);
          @include typography.text-secondary {}
        </style>
        <span>{title}</span>
      </div>
      <div class="_details">
        <style>
          margin-bottom: 2em;
          height: 80px;
        </style>
        {description}
      </div>
    </div>
  </div>
  <div class="_example">
    <style>
      font-size: 14px;
      :global(.prism-code) {
        max-height: 400px;
      }
      :global(.prism-code > div) {}
    </style>
    {example}
  </div>
</div>



<!--
  @frame { visible: false }
-->
<div export
  component
  as="VariousFeatures"
  class="_various-features $layout._row">
  <style>
    border-top: 1px solid rgb(255, 255, 255);
    border-bottom: 1px solid rgb(226, 226, 226);
    @media screen and (max-width: 600px) {
      flex-direction: column;
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="VariousFeatureItem"
  class="_item $layout._col $layout._col3">
  <style>

    display: flex;
    margin: 0px auto;
    margin-left: 10px;
    @include layout.py-6 {}
    @include mobile {
      margin-left: 0;
    }
    @media screen and (max-width: 600px) {
      width: 100%;
    }

    &:first-child {
      margin-left: 0;
    }

  </style>
  <icons.Icon name={iconName} class="$_icon">
    <style>
      @include section-icon {}
    </style>
  </icons.Icon>
  <div class="_info">
    <div class="_title">
      <style>
        font-size: 18px;
        font-weight: 500;
        align-items: flex-start;
        margin-bottom: 20px;
        @include typography.text-secondary {}
        @media screen and (max-width: 1400px) {
          height: 50px;
        }
        @media screen and (max-width: 900px) {
          height: auto;
        }
      </style>
      <span>{title}</span>
    </div>
    <div class="_details">{description}</div>
  </div>
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="BigFeature"
  class="_big-feature _section _row"
  class:noShadow="no-shadow"
  class:smallerPreview="smaller-preview"
  class:ctaText="has_cta">
  <style>
    border-bottom: 1px solid rgb(226, 226, 226);
    border-top: 1px solid rgb(255, 255, 255);
    padding-top: 80px;
    padding-bottom: 80px;
  </style>
  <div class="$layout._col $layout._col3">
    <style>
      display: flex;
    </style>

    <!-- here just for spacing -->
    <icons.Icon name="grow" class="$_icon">
      <style>
        visibility: hidden;
        @include section-icon {}
      </style>
    </icons.Icon>
    <div class="_info">
      <div class="_title">
        <style>
          font-size: 1.3em;
          margin-bottom: var(--gap-5);
          font-weight: 500;
          @include typography.text-secondary {}
        </style>
        {title}
      </div>
      <div class="_details">{description}</div>
      <a class="_mini-cta-link" href={ctaHref?}>
        <style>
          display: none;
          margin-top: 10px;
          align-items: center;
          color: rgb(102, 163, 241);
          text-decoration: none;
          ._mini-cta-icon {
            font-size: 0.9em;
            margin-left: 6px;
          }

          &:within(.has_cta) {
            display: block;
          }
        </style>

        {ctaText}<icons.Icon name="chevron-right">
          <style>
            font-size: 0.9em;
            color: inherit;
            position: relative;
            display: inline-block;
            top: 2px;
          </style>
        </icons.Icon>
      </a>
    </div>
  </div>
  <div class="_preview $layout._col $layout._col9">
    <style>

      margin-left: 15px;
      @include mobile {
        margin-left: 0;
      }
      &:within(.smaller-preview) {
        text-align: center;
      }
      :global(img, video, .prism-code) {
        border-radius: 4px;
        width: 100%;
        box-shadow: 0px 0px 20px 8px rgba(0, 0, 0, 0.103);
        &:within(.smaller-preview) {
          width: auto;
        }
        &:within(.no-shadow) {
          box-shadow: initial;
        }
      }

    </style>
    {preview}
  </div>
</div>


<!--
  @frame { title: "Website / Desktop", width: 1304, height: 4194, x: -93, y: -52 }
-->
<Home component as="Preview">
  <!--
    @frame { title: "Website / Desktop", width: 1452, height: 4194, x: -90, y: -54 }
  -->
  <Header title={<fragment>
      Paperclip is a <strong>
        generic approach that brings scoped CSS to any kind of web application
      </strong>
    </fragment>}
    description={<fragment>
      Paperclip is a tiny language that allows you to define primitive HTML &
      CSS components for web applications at any scale.
    </fragment>}
    cta={<fragment>
      <!--  <button.Anchor class="$typography.semi-bold" strong>Get started</button.Anchor>
        <button.Anchor secondary class="$typography.semi-bold">Check out on GitHub</button.Anchor>-->
      <button.Anchor class="$typography.semi-bold" strong>
        Sign up for early access
      </button.Anchor>
    </fragment>}
    preview={<HeaderExamples left={<CodePreview />}
      right={<CodePreview />} />} />

  <Summary title="Writing bug-free HTML & CSS is hard"
    text="Paperclip is a generic solution for all languages that gives you additional " />

  <MainFeatures>
    <MainFeatureItem iconName="shapes"
      title="Paperclip covers re-usable primitives"
      description="Paperclip allows you to use basic HTML & CSS to define primitive components that you can re-use in your app."
      example={<CodePreview />} />
    <MainFeatureItem iconName="reactjs"
      title="Import directly into React code"
      description="Paperclip documents compile to plain code that you can import directly into your code."
      example={<CodePreview />} />
  </MainFeatures>

  <VariousFeatures>
    <VariousFeatureItem iconName="chaotic-1"
      title="Scoped CSS"
      description="CSS styles are explicitly referenced within Paperclip, so you don't have to have to worry about styles leaking out." />
    <VariousFeatureItem iconName="link"
      title="Strongly typed"
      description="UIs compile to strongly typed code, so worry less about breaking changes." />
    <VariousFeatureItem iconName="grow"
      title="Works with your existing codebase"
      description="Paperclip compliments your existing codebase, so use it as you go." />
  </VariousFeatures>

  <BigFeature title="Live editing"
    ctaText="Learn about visual regression testing"
    description="Paperclip comes with visual tools that enable to build your UIs in realtime."
    preview={<video src="../../static/vid/paperclip-fast-demo.mp4"
      autoplay
      loop />} />

  <BigFeature title="Never miss a CSS Bug"
    description="Use the visual regression tool to catch every visual state of your UI. Feel more confident about maintaining your styles."
    preview={<video src="../../static/vid/visual-regression-testing.mp4"
      autoplay
      loop />}
    ctaText="View the API" />

  <CTABottom title="Easy to set up"
    description={<fragment>
      Paperclip currently supports <strong>React</strong> and <strong>
        static HTML
      </strong> out of the box. Want to try it out? Just check out the <a href="/repl">
        playground
      </a>, or run one of the following commands in your existing codebase. You
      can easily opt-out whenever you want.
    </fragment>}
    actions={<fragment>
      <CTAInstall label="NPX">npx @paperclip-ui/cli init</CTAInstall>
      <CTAInstall label="Yarn">
        yarn add @paperclip-ui/cli --dev && yarn paperclip init
      </CTAInstall>
    </fragment>} />
  <div class="$layout._row">
    <style>
      text-align: center;
      padding: 32px;
      display: flex;
      display: none;
      flex-direction: column;
      align-items: center;
      max-width: 700px;
      margin: 0px auto;
    </style>
    <div>
      <style>
        font-size: 32px;
        font-weight: 600;
        margin-bottom: 16px;
      </style>
      Easy setup
    </div>
    <div>
      <style>
        padding-bottom: 16px;
      </style>
      Paperclip currently supports <strong>React</strong> and <strong>
        static HTML
      </strong> out of the box. Want to try it out? Just check out the <a href="/repl">
        playground
      </a>, or run one of the following commands in your existing codebase. You
      can easily opt-out whenever you want.
    </div>

    <!-- TODO: have two options -->
    <div>
      <style>
        display: flex;
        flex-direction: column;
        grid-row-gap: 18px;
      </style>

      <div>
        Via NPX:
        <div>
          <style>
            background: rgb(224, 224, 224);
            border: 1px solid grey;
            display: inline-block;
            padding: 8px 16px;
            border-radius: 4px;
          </style>
          npx @paperclip/cli init
        </div>
      </div>

      <div>
        Via Yarn:
        <div>
          <style>
            background: rgb(224, 224, 224);
            border: 1px solid grey;
            display: inline-block;
            padding: 8px 16px;
            border-radius: 4px;
          </style>
          yarn add @paperclip/cli --dev && yarn @paperclip/cli init
        </div>
      </div>
    </div>
  </div>

  <Footer />
</Home>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 725, y: -252 }
-->
<div export component as="Footer">
  <style>

    background: rgb(48, 50, 56);
    padding: 80px;
    text-align: center;
    display: none;
  </style>
  <div>
    <style>
      max-width: 400px;
      margin: 0px auto;
    </style>
    <div>
      <style>
        color: white;
        font-size: 18px;
        margin-bottom: 24px;
        line-height: 1.6em;
      </style>
      Paperclip is currently in closed beta, but sign up if you're interested and
      we'll reach out soon!
    </div>
    <button.Anchor class="$typography.semi-bold"
      strong
      href="https://forms.gle/WJDVJEm9siYatABcA">
      Sign up for early access
    </button.Anchor>
  </div>
</div>


<!--
  @frame { title: "Desktop / Really Big", width: 3706, height: 4689, x: 2459, y: -74 }
-->
<Preview />

<!--
  @frame { title: "Mobile", width: 525, height: 4817, x: 1497, y: -59 }
-->
<Preview />