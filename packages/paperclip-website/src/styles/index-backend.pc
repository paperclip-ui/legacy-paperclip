<import src="./colors.pc" />
<import src="./typography.pc" as="typography" />
<import src="./layout.pc" as="layout" />
<import src="./button.pc" as="button" />
<import src="./icons/icons.pc" as="icons" />

<!--  You should be able to <i>see</i> what you're building in
  realtime, and that's what Paperclip provides - tooling to
  build your UIs <i>visually</i>. No more need to jump back
  and forth between the browser and code.

-->
<style>
  :root {
    --row-max-width: 10200px;
  }
  @export {
    ._emoji {}
  }
  @mixin mobile {
    @media screen and (max-width: 900px) {
      @content;
    }
  }
  @mixin tiny {
    @media screen and (max-width: 430px) {
      @content;
    }
  }
  @mixin section-icon {
    margin-right: 8px;
    flex-shrink: 0;
    font-size: 1.7em;
    position: relative;
  }
</style>



<!--
  @frame { visible: false }
-->
<span export
  component
  as="Highlight"
  className="_highlight"
  className:noBreak="noBreak"
  className:darker="darker"
  className:bold="bold">
  <style>
    color: var(--color-green-neon-light);
    font-weight: 500;
    :self(.darker) {
      color: var(--color-green-army);
    }
    :self(.bold) {
      font-weight: 600;
    }
    :self(.noBreak) {
      white-space: nowrap;
    }
  </style>
  {children}
</span>


<!--
  @frame { visible: false }
-->
<div export component as="Home" className="_home $typography.text-default">
  <style>
    background: rgb(245, 245, 245);
    line-height: 1.6em;
    * {
      box-sizing: border-box;
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<layout.Container export component as="Header" className="$_header $_main">
  <style>

    background: rgb(48, 50, 56);
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
  </style>
  <layout.Row>
    <!-- Blurb -->
    <div>
      <style>
        margin: 0px auto;
        margin-top: 100px;
        max-width: 600px;
        margin-bottom: 72px;
        text-align: center;
      </style>
      <div className="_title">
        <style>
          color: rgba(255, 255, 255, 0.9);
          font-size: 1.58em;
          line-height: 1.3em;
          margin-bottom: var(--gap-5);
          font-weight: 600;
          letter-spacing: 0.04em;
          @include typography.text-secondary {}
        </style>
        {title}
      </div>
      <div className="_subtext">
        <style>
          color: rgba(255, 255, 255, 0.9);
          font-weight: 500;
          letter-spacing: 0.075em;
          line-height: 1.8em;
          ._emoji {
            color: rgba(255, 255, 255, 1);
          }
        </style>
        {description}
      </div>
      <div className="_cta">
        <style>
          margin-top: 15px;
          :global(a) {
            margin-right: 15px;
            margin-top: 15px;
            @include tiny {
              width: 100%;
              box-sizing: border-box;
              margin-right: 0;
            }
            &:first-child {
              margin-left: 0;
            }
          }
        </style>
        {cta}
      </div>
    </div>
  </layout.Row>
  <layout.Row>
    <div className="_preview">
      <style>
        width: 100%;
        :global(img, video) {
          border-radius: 4px;
          max-width: 100%;
          box-sizing: border-box;
          margin-bottom: -16px;
        }
      </style>
      {preview}
    </div>
  </layout.Row>
</layout.Container>


<!--
  @frame { visible: false }
-->
<div component as="CodePreview" className="_code-preview">
  <style>
    width: 100%;
    height: 100%;
    min-height: 200px;
    background: rgb(221, 221, 221);
    border-radius: 6px;
  </style>
</div>


<!--
  @frame { visible: false }
-->
<div export component as="Summary" className="_summary $layout._row">
  <style>
    border-top: 1px solid rgb(226, 226, 226);
    @include layout.py-6 {}
  </style>
  <div className="$layout._col12">
    <div className="_title">
      <style>
        font-size: 1.2em;
        font-weight: 500;
        margin-bottom: var(--gap-4);
        @include typography.text-secondary {}
      </style>
      {title}
    </div>
    <div className="_text">{text}</div>
  </div>
</div>



<!--
  @frame { visible: false }
-->
<div export component as="MainFeatures" className="_main-features $layout._row">
  <style>
    border-top: 1px solid rgb(226, 226, 226);
    border-bottom: 1px solid rgb(226, 226, 226);
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="MainFeatureItem"
  className="_item $layout._col $layout._col6">
  <style>
    display: flex;
    flex-direction: column;
    @include layout.py-6 {}
    :self(:first-child) {
      border-right: 1px solid rgb(226, 226, 226);
      padding-right: 30px;
      @include mobile {
        padding-right: 0px;
        border-right: 0px;
      }
    }

    :self(:last-child) {
      border-left: 1px solid rgb(255, 255, 255);
      padding-left: 30px;
      @include mobile {
        padding-top: 0px;
        padding-left: 0px;
        border-left: 0;
      }
    }
  </style>
  <div className="_heading">
    <style>
      display: flex;
    </style>
    <icons.Icon name={iconName} className="$_icon">
      <style>
        @include section-icon {}
      </style>
    </icons.Icon>
    <div className="_info">
      <style>
        display: flex;
        flex-direction: column;
      </style>
      <div className="_title">
        <style>
          font-size: 1.2em;
          display: flex;
          font-weight: 500;
          margin-bottom: var(--gap-4);
          @include typography.text-secondary {}
        </style>
        <span>{title}</span>
      </div>
      <div className="_details">
        <style>
          margin-bottom: 2em;
        </style>
        {description}
      </div>
    </div>
  </div>
  <div className="_example">
    <style>
      font-size: 14px;
      :global(.prism-code) {
        max-height: 400px;
      }
      :global(.prism-code > div) {}
    </style>
    {example}
  </div>
</div>



<!--
  @frame { visible: false }
-->
<div export
  component
  as="VariousFeatures"
  className="_various-features $layout._row">
  <style>
    border-top: 1px solid rgb(255, 255, 255);
    border-bottom: 1px solid rgb(226, 226, 226);
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="VariousFeatureItem"
  className="_item $layout._col $layout._col3">
  <style>
    :self {
      @include layout.py-6;
      display: flex;
      margin: 0px auto;
      margin-left: 10px;
      @include mobile {
        margin-left: 0;
      }
    }
    :self(:first-child) {
      margin-left: 0;
    }

  </style>
  <icons.Icon name={iconName} className="$_icon">
    <style>
      @include section-icon {}
    </style>
  </icons.Icon>
  <div className="_info">
    <div className="_title">
      <style>
        font-size: 18px;
        font-weight: 500;
        align-items: flex-start;
        margin-bottom: 20px;
        @include typography.text-secondary {}
      </style>
      <span>{title}</span>
    </div>
    <div className="_details">{description}</div>
  </div>
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="BigFeature"
  className="_big-feature $layout._section $layout._row">
  <style>
    border-bottom: 1px solid rgb(226, 226, 226);
    border-top: 1px solid rgb(255, 255, 255);
  </style>
  <div className="$layout._col $layout._col3">
    <style>
      display: flex;
    </style>
    <!--  <icons.Icon name="grow" className="$_icon">
      <style>
      @include ""-icon;
      </style>
      </icons.Icon>-->
    <div className="_info">
      <div className="_title">
        <style>
          font-size: 1.3em;
          margin-bottom: var(--gap-4);
          @include typography.text-secondary {}
        </style>
        {title}
      </div>
      <div className="_details">{description}</div>
      <a className="_mini-cta-link" href={ctaHref?}>
        <style>
          display: flex;
          margin-top: 10px;
          opacity: 0.5;
          align-items: center;
          color: inherit;
          text-decoration: none;
          ._mini-cta-icon {
            font-size: 0.9em;
            margin-left: 6px;
          }
        </style>

        {ctaText}<icons.Icon name="chevron-right" className="$_mini-cta-icon" />
      </a>
    </div>
  </div>
  <div className="_preview">
    <style>
      :self {
        margin-left: 15px;
        @include mobile {
          margin-left: 0;
        }
        :global(img, video) {
          border-radius: 4px;
          @include mobile;
        }
      }
    </style>
    {preview}
  </div>
</div>





<!--
  @frame { visible: false, title: "Desktop", width: 1452, height: 3102, x: -274, y: -13 }
-->
<Home component as="Preview">
  <Header title={<fragment>
      A hybrid approach to building web applications.
    </fragment>}
    description={<fragment>
      Realtime previews, visual regression testing, and more. Paperclip is a
      template language that comes with tooling to help you build UIs more
      quickly & safely.
    </fragment>}
    cta={<fragment>
      <button.Anchor className="$typography.semi-bold" strong>
        Sign up for early access
      </button.Anchor>
      <!-- <button.Anchor secondary className="$typography.semi-bold">Check out on GitHub</button.Anchor> -->
    </fragment>}
    preview={<video src="../../static/vid/paperclip-fast-demo.mp4"
      autoplay
      loop />} />

  <!-- <Summary title="Why?" text="You shouldn't have to be bogged down by developer tooling in order to make simple HTML & CSS changes. And you should be able to make style changes confidently without needing to worry about introducing bugs. " /> -->

  <MainFeatures>
    <MainFeatureItem iconName="shapes"
      title="A minimalistic template language"
      description="Paperclip only covers basic HTML & CSS that can be written to cover primitive UI components which can then be imported directly into your app."
      example={<CodePreview />} />
    <MainFeatureItem iconName="reactjs"
      title="Compiles plain, efficient code"
      description="Paperclip templates "
      example={<CodePreview />} />
  </MainFeatures>

  <MainFeatures>
    <MainFeatureItem iconName="chaotic-1"
      title="Keep CSS under control"
      description="There is no global CSS in Paperclip. Instead, Paperclip has syntax that allows you to explicitly reference styles from other files, so you don't have to worry about leaky CSS."
      example={<CodePreview />} />
    <MainFeatureItem iconName="reactjs"
      title="Works with third-party CSS"
      description="Kee "
      example={<CodePreview />} />
  </MainFeatures>

  <VariousFeatures>
    <VariousFeatureItem iconName="chaotic-1"
      title="Keep CSS under control"
      description="There is no global CSS in Paperclip. Instead, you explicitly" />
    <VariousFeatureItem iconName="link"
      title="Strongly typed"
      description="UIs compile to strongly typed code, so worry less about breaking changes." />
    <VariousFeatureItem iconName="grow"
      title="Incrementally adoptable"
      description="Paperclip compliments your existing codebase, so use it as you go." />
  </VariousFeatures>

  <BigFeature title="IDE integration"
    description="Realtime previews, intellisense, and other tools make up the VS Code extension to help you build UIs faster."
    preview={<img src="./assets/realtime-editing-2.gif" />}
    ctaText="View the extension" />

  <BigFeature title="Never miss a CSS Bug"
    description="Use the visual regression tool to catch every visual state of your UI. No more broken window CSS. 🎉"
    preview={<img src="./assets/realtime-editing-2.gif" />}
    ctaText="View the API" />
</Home>


<!--
  @frame { title: "Desktop", width: 1291, height: 2939, x: 1888, y: -67 }
-->
<Preview />

<!--
  @frame { title: "Desktop", width: 355, height: 2970, x: 1435, y: -62 }
-->
<Preview />
<!--
  @frame { title: "Desktop Large", width: 3704, height: 2857, x: 3370, y: -93 }
-->
<Preview />