<!-- atoms -->
<style>

  .font-regular {
    font-family: sans-serif;
  }

  * {
    transition: 0.1s;
  }

  @mixin mask {
    mask-size: var(--mask-size, 1em);
    width: var(--mask-size, 1em);
    height: var(--mask-size, 1em);
    background: currentColor;
  }

  :root {}
</style>

<!--
  @frame { height: 768, title: "Gutter", visible: false, width: 1024, x: 1125, y: 14 }
-->
<div export
  component
  as="Gutter"
  class:left="tall left"
  class:right="tall right"
  class:bottom="flat bottom">
  <style>
    background: rgb(221, 221, 221);
    flex-shrink: 0;
    --border: 2px solid grey;
    &.left {
      border-right: var(--border);
    }
    &.right {
      border-left: var(--border);
    }
    &.bottom {
      border-top: var(--border);
    }

    &.tall {
      width: 250px;
    }
    &.flat {
      height: 250px;
    }

  </style>
  {children}
</div>

<!--
  @frame { height: 768, visible: false, width: 1024, x: 86, y: -302 }
-->
<div component as="Tree" class:active="active">
  <style>
    border-radius: 4px;
    font-size: 11px;
    &.active {
      background: rgb(204, 204, 204);
    }
  </style>
  {children}
</div>

<!--
  @frame { height: 768, visible: false, width: 1024, x: 22, y: 126 }
-->
<div component
  as="Leaf"
  style="--depth: {depth}"
  {class?}
  class:expanded="expanded"
  class:hasChildren="has-children">
  <style>
    padding: 4px 8px;
    display: flex;
    gap: 8px;
    align-items: center;
    padding-left: calc(var(--depth, 1px) * 12px);
  </style>
  <Icon>
    <style>
      font-size: 0.5em;
      --mask-size: 7px;
      opacity: 0.5;
      mask-image: url("./chevron-2.svg");
      flex-shrink: 0;
      --size: 8px;
      margin-right: -2px;
      visibility: hidden;
      &:within(.expanded) {
        transform: rotate(90deg);
      }
      &:within(.has-children) {
        visibility: visible;
      }
    </style>
  </Icon>
  {children}
</div>

<Leaf export
  component
  as="LayerLeaf"
  {expanded?}
  {hasChildren?}
  {depth?}
  class:isElement="$is-element"
  class:isInstance="$is-instance">
  <style>
    &.is-instance {
      color: purple;
    }
  </style>
  <LayerIcon {isElement?} {isInstance?} {isText?} />
  {children}
</Leaf>

<div component
  as="LayerIcon"
  class:isElement="is-element"
  class:isText="is-text"
  class:isInstance="is-instance">
  <style>
    @include mask {}
    &.is-element {
      margin-right: -3px;
      font-size: 0.7em;
      mask-image: url("./square.svg");
    }
    &.is-text {
      margin-right: -5px;
      font-size: 0.9em;
      mask-image: url("./text-2.svg");
    }
    &.is-instance {
      margin-right: -2px;
      transform: rotate(45deg);
      font-size: 0.6em;
      mask-image: url("./square.svg");
    }
  </style>
</div>

<!--
  @frame { visible: false }
-->
<div export component as="Layers">
  <style>
    padding: 8px;
    color: rgb(59, 59, 59);
  </style>
  <Tree>
    <LayerLeaf depth="1" expanded hasChildren isElement>Container</LayerLeaf>
    <Tree active>
      <LayerLeaf depth="2" expanded hasChildren isElement>Header</LayerLeaf>
      <Tree>
        <LayerLeaf depth="3" isElement>Navigation</LayerLeaf>
        <Tree>
          <LayerLeaf depth="4" hasChildren isInstance>Home Lnk</LayerLeaf>
          <LayerLeaf depth="4" hasChildren isInstance>About Link</LayerLeaf>
          <LayerLeaf depth="4" expanded hasChildren isInstance>Link</LayerLeaf>
          <Tree>
            <LayerLeaf depth="5" isText>Contact</LayerLeaf>
          </Tree>
        </Tree>
        <LayerLeaf depth="3" isElement>Right Controls</LayerLeaf>
      </Tree>
    </Tree>
    <LayerLeaf depth="2" hasChildren expanded isElement>span</LayerLeaf>
    <Tree>
      <LayerLeaf depth="3" isText>Some text</LayerLeaf>
    </Tree>
  </Tree>
</div>


<!--
  @frame { visible: false }
-->
<div export component as="ComputedRules">
  <ul>
    <li>Show computed style rules</li>
  </ul>
</div>
<!--
  @frame { visible: false }
-->
<div export component as="Paint">
  <ul>
    <li>show props specific to element (attributes)</li>
    <li>Show styles</li>
    <li>Styles panel should display "raw" view of all applied CSS</li>
    <li>Styles not represented in pain </li>
  </ul>
</div>

<!--
  @frame { visible: false }
-->
<div export component as="Files">
  <ul>
    <li>Filter Input</li>
    <li>Flat list view</li>
    <li>Show media</li>
    <li>Nested files view</li>
  </ul>
</div>

<!--
  @frame { visible: false }
-->
<div export component as="Components">
  <ul>
    <li>Filter Input</li>
    <li>Show native elements</li>
    <li>Show components</li>
  </ul>
</div>

<!--
  @frame { visible: false }
-->
<div export component as="Styles">
  <ul>
    <li>Filter Input</li>
    <li>show style rules</li>
    <li>show nested styles</li>
    <li>Show variables</li>
    <li>Show show mixins</li>
  </ul>
</div>

<!--
  @frame { height: 768, visible: false, width: 1024, x: 0, y: 0 }
-->
<div export component as="Icon" {class}>
  <style>
    mask-repeat: no-repeat;
    mask-position: 50%;
    @include mask {}
  </style>
</div>

<!--
  @frame { visible: false }
-->
<div export
  component
  as="ProjectNavigationButton"
  {class?}
  class:active="active">
  <style>
    color: rgb(75, 75, 75);
    padding: 8px;
    &.active {
      background: rgb(221, 221, 221);
    }
  </style>
  {children}
</div>

<!--
  @frame { visible: false }
-->
<div export component as="ProjectNavigation">
  <style>
    background: rgb(189, 189, 189);
    height: 100%;
  </style>
  <ProjectNavigationButton active={showFiles?}>
    <Icon>
      <style>
        --mask-size: 0.9em;
        mask-image: url("./document.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
  <ProjectNavigationButton active={showComponents?}>
    <Icon>
      <style>
        mask-image: url("./module.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
  <ProjectNavigationButton active={showLayers}>
    <Icon>
      <style>
        --mask-size: 0.9em;
        mask-image: url("./layers-2.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
</div>



<!--
  @frame { visible: false }
-->
<div export component as="ObjectNavigation">
  <style>
    background: rgb(189, 189, 189);
    display: flex;
  </style>
  <ProjectNavigationButton active={showPaint?}>
    <Icon>
      <style>
        mask-image: url("./layers.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
  <ProjectNavigationButton active={showRules?}>
    <Icon>
      <style>
        mask-image: url("./layers.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
  <ProjectNavigationButton active={showComputed?}>
    <Icon>
      <style>
        mask-image: url("./layers.svg");
      </style>
    </Icon>
  </ProjectNavigationButton>
</div>

<!--
  @frame { height: 768, title: "Desktop", visible: false, width: 1024, x: 8, y: 50 }
-->
<div class="font-regular" component as="Preview">
  <style>
    width: 100vw;
    height: 100vh;
    display: flex;
    flex-direction: column;
  </style>


  <div>
    <style>
      display: flex;
      flex: 1;
    </style>

    <!-- left gutter -->
    <ProjectNavigation {showLayers?}
      {showFiles?}
      {showComponents?}
      {showStyles?} />
    <Gutter left>
      {showLayers && <Layers />}
      {showFiles && <Files />}
      {showComponents && <Components />}
      {showStyles && <Styles />}
    </Gutter>
    <div>
      <style>
        width: 100%;
        display: flex;
        flex-direction: column;
        height: 100%;
      </style>

      <!-- Canvas -->
      <div>
        <style>
          display: flex;
          flex-direction: column;
        </style>
        <div>
          <style>
            background: rgb(221, 221, 221);
            border-bottom: 1px solid grey;
            width: 100%;
            text-align: center;
            padding: 8px;
            flex: 0;
          </style>
          Some file
        </div>
        <style>
          flex: 1;
        </style>
        <div />
      </div>
    </div>

    <!-- right gutter -->
    <Gutter right>
      <ObjectNavigation {showComputed?} {showRules?} {showPaint?} />
      {showComputed && <ComputedRules />}
      {showRules && <StyleRules />}
      {showPaint && <Paint />}
    </Gutter>
  </div>
</div>

<!--
  @frame { height: 768, title: "components", width: 1024, x: 3489, y: -44 }
-->
<Preview showComponents />
<!--
  @frame { height: 768, title: "Styles", width: 1024, x: 2294, y: -30 }
-->
<Preview showStyles showPaint />

<!--
  @frame { height: 768, title: "Files", width: 1024, x: 1148, y: -51 }
-->
<Preview showFiles showComputed />

<!--
  @frame { title: "Layers" }
-->
<Preview showLayers showRules />