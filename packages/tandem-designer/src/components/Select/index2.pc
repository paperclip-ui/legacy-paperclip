<import src="styles/atoms.pc" as="atoms" />
<style>
  @keyframes fade-in {
    0% {
      opacity: 0;
      transform: translateY(-3px);
    }
    100% {
      opacity: 1;
      transform: translateY(0px);
    }
  }
</style>

<!--
  @frame { visible: false }
-->
<div export
  component
  as="MenuItem"
  {class?}
  {onMouseDown?}
  {onClick?}
  tabIndex="-1"
  class:active="active"
  class:hover="hover"
  class:noFocus="no-focus">
  <style>
    padding: 8px 14px;
    cursor: pointer;
    user-select: none;
    display: flex;
    outline: none;
    align-items: center;
    justify-content: space-between;
    transition: 0.2s;
    &.active, &.hover, &:hover {
      background: var(--select-menu-item-background-color-active);
      color: var(--select-menu-item-text-color-active);
    }

    &.no-focus {
      background: transparent;
      cursor: default;
    }
    &:within(.round):first-child {
      border-top-left-radius: 2px;
      border-top-right-radius: 2px;
    }
    &:last-child {
      border-bottom-left-radius: 2px;
      border-bottom-right-radius: 2px;
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div export
  component
  as="Menu"
  class:round="round"
  class="v2 {class?}"
  {style?}
  class:right="right">
  <style>
  </style>
  <style>
    top: 100%;
    position: absolute;
    min-width: 300px;
    color: var(--select-text-color);
    font-size: 14px;
    position: absolute;
    background: var(--select-background-color);
    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.1);
    border-bottom-left-radius: 2px;
    border-bottom-right-radius: 2px;
    z-index: 99999;
    animation: fade-in 0.2s;
    &.right {
      right: 0px;
    }
    &.round {
      border-top-left-radius: 2px;
      border-top-right-radius: 2px;
    }

    &:within(:global(.light)) {
      --select-text-color: var(--text-color);
      --select-background-color: var(--grey-200);
      --select-menu-item-background-color-active: var(--grey-300);
      --select-menu-item-text-color: var(--text-color);
      --select-menu-item-text-color-active: white;
    }

    &:within(:global(.dark)) {
      --select-text-color: var(--text-color-night);
      --select-background-color: var(--grey-night-300);
      --select-menu-item-background-color-active: var(--grey-night-100);
    }

  </style>
  {children}
</div>



<!--
  @frame { visible: false }
-->
<div export component as="Container" tabIndex="-1" {onClick?} {class?} {onBlur}>
  <style>
    position: relative;
    outline: none;
  </style>
  {children}
</div>


<!--
  @frame { visible: false }
-->
<div component
  as="Preview"
  class:right="right"
  class:dark="dark"
  class:light="light">
  <style>
    padding: 10px;
    display: flex;
    &.right {
      justify-content: flex-end;
    }
  </style>
  <Container>
    <button>I'm a button</button>
    {showMenu && <Menu {dark?} {light?} {right?}>
      <MenuItem>Search</MenuItem>
      <MenuItem>Search</MenuItem>
      <MenuItem active>Search</MenuItem>
    </Menu>}
  </Container>
</div>

<!--
  @frame { title: "Select / Dark", width: 391, height: 200, x: 836, y: 400 }
-->
<Preview showMenu dark />

<!--
  @frame { title: "Select / Light", width: 341, height: 196, x: 461, y: 398 }
-->
<Preview showMenu light />

<!--
  @frame { title: "Select / Right", width: 341, height: 196, x: 459, y: 666 }
-->
<Preview showMenu light right />