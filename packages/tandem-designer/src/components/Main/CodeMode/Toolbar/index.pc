<!-- <import src="    @tandem-ui/designer/src/components/Theme/index.pc" ""="Theme" /> -->
<import src="@tandem-ui/design-system/src/atoms.pc" inject-styles />
<import src="@tandem-ui/designer/src/styles/utils.pc" as="utils" />
<import src="@tandem-ui/designer/src/components/Select/index2.pc" as="Select" />
<import src="@tandem-ui/design-system/src/TextInput.pc" as="TextInput" />

<!--
  @frame { visible: false }
-->
<div export component as="Tab" class:active="active" class:hover="hover">
  <style>
    padding: 0px 16px;
    border-right: 1px solid rgb(190, 190, 190);
    display: flex;
    align-items: center;
    cursor: pointer;
    &.active {
      background: rgb(179, 179, 179);
    }
    &:hover, &.hover {
      .remove-button {
        visibility: visible;
      }
    }
  </style>
  {children}
  <button onClick={onRemoveButtonClick} class="remove-button">
    <style>
      visibility: hidden;
      padding: 0;
      border: none;
      background: transparent;
      color: inherit;
    </style>
    &times;
  </button>
</div>


<!--
  @frame { visible: false }
-->
<div export component as="AddFileButton" {onClick}>
  <style>
    padding: 0px 16px;
    display: flex;
    align-items: center;
    font-weight: 400;
    cursor: pointer;
  </style>
  &plus;
</div>


<!--
  @frame { visible: false }
-->
<div export component as="Topbar">
  <style>
    height: 40px;
    flex-shrink: 0;
    display: flex;
    flex-direction: row;
    color: var(--grey-100);
    padding: 0px 14px;
  </style>
  {children}
</div>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 941, y: -8 }
-->
<div export component as="FileSelect" tabIndex="0" {onMouseDown?} {onBlur?}>
  <style>
    flex: 1;
    display: block;
    cursor: pointer;
    outline: none;
    align-items: stretch;
    outline: none;
    font-size: 14px;
    transition: 0.2s;
    align-self: center;
    position: relative;
    color: var(--grey-100);
  </style>

  <div onClick={onButtonClick} class:active="active">
    <style>
      display: flex;
      cursor: pointer;
      align-items: center;
      outline: none;
      padding: 0px 14px;
      font-size: 14px;
      transition: 0.2s;
      position: relative;
      white-space: nowrap;
      &:hover {}

      &.active {}
    </style>
    <div title={name}>
      <style>
        max-width: 150px;
        overflow: hidden;
        text-overflow: ellipsis;
      </style>
      {name}
    </div>
    <i>
      <style>
        margin-left: 14px;
        position: relative;
        top: 1px;
        --size: 14px;
        mask-image: url("./chevron-down.svg");
        transition: 0.2s;
        @include utils.mask {}
        &:within(.active) {
          top: 4px;
        }
      </style>
    </i>
  </div>
  {menu}
</div>

<!--
  @frame { visible: false, width: 1024, height: 768, x: 492, y: -121 }
-->
<Select.Menu dark export component as="FileMenu">
  <style>
    top: 40px;
    left: 0px;
    z-index: 1024;
    min-width: 250px;
    position: absolute;
  </style>
  {children}
</Select.Menu>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 599, y: -202 }
-->
<Select.MenuItem export
  component
  as="FileMenuItem"
  {noFocus?}
  {hover?}
  {onClick?}>
  <style>
    padding-right: 16px;
    position: static;
    &:hover, &.hover {
      .more-file-select {
        opacity: 1;
        pointer-events: initial;
      }
    }

  </style>
  {children}
  {moreSelect}
</Select.MenuItem>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 561, y: -226 }
-->
<div export component as="EyeButton" class:highlight="highlight" {onClick}>
  <style>
    display: flex;
    align-items: center;
    padding: 12px;
    cursor: pointer;
  </style>
  <i>
    <style>
      --size: 24px;
      mask-image: url("./eye.svg");
      transition: 0.2;
      color: var(--grey-300);
      @include utils.mask {}
      &:hover {
        color: var(--grey-100);
      }
    </style>
  </i>
</div>



<!--
  @frame { visible: false, width: 1024, height: 768, x: 47, y: 19 }
-->
<div export component as="UploadButton" class:highlight="highlight">
  <style>
    --size: 20px;
    display: flex;
    align-items: center;
    cursor: pointer;
    position: relative;
    white-space: nowrap;
    transition: 0.2s;
    color: var(--grey-300);
    &:hover {
      color: var(--grey-100);
    }
  </style>
  <i>
    <style>
      mask-image: url("./plus.svg");
      margin-right: 6px;
      @include utils.mask {}
    </style>
  </i>
  Add file
  <input type="file" {onChange}>
    <style>
      opacity: 0;
      position: absolute;
      width: var(--size);
      height: var(--size);
      cursor: pointer;
    </style>
  </input>
</div>



<!--
  @frame { visible: false }
-->
<Select.Container export
  component
  as="MoreFileSelect"
  {onClick}
  {onBlur}
  class="$more-file-select">
  <style>

    right: 0px;
    z-index: 99999;
    pointer-events: none;
    opacity: 0;
    margin-left: 16px;
    position: static;
  </style>
  {children}
  {menu}
</Select.Container>


<!--
  @frame { visible: false }
-->
<Select.Menu export component as="MoreFileMenu" {style}>
  <style>
    min-width: 150px;
    position: absolute;
  </style>
  <Select.MenuItem onClick={onRenameClick}>Rename</Select.MenuItem>
  <Select.MenuItem onClick={onRemoveClick}>
    Delete
    <i>
      <style>
        --size: 0.9em;
        mask-image: url("./trash.svg");
        @include utils.mask {}
      </style>
    </i>
  </Select.MenuItem>
</Select.Menu>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 148, y: 51 }
-->
<div export
  component
  as="MoreFileButton"
  {onClick}
  class:highlight="highlight"
  {onClick}>
  <style>
    display: flex;
    align-items: center;
    cursor: pointer;
    width: 24px;
  </style>
  <i>
    <style>
      --size: 18px;
      mask-image: url("./more.svg");
      color: var(--grey-300);
      @include utils.mask {}
    </style>
  </i>
</div>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 325, y: -475 }
-->
<Select.MenuItem export
  component
  as="AddDocumentButton"
  class:media="$media"
  class:page="$page"
  {onMouseDown?}
  {onClick?}>
  <style>
    position: relative;
    color: var(--text-color-night);
    &:hover {
      color: var(--color-blue-50);
    }
  </style>
  <div>
    <style>
      display: flex;
      align-items: center;
    </style>
    <i>
      <style>
        position: relative;
        @include utils.mask {}
        &:within(.media) {
          --size: 14px;
          mask-image: url("./image2.svg");
          margin: 0px 1px;
          left: 1px;
        }
        &:within(.page) {
          --size: 16px;
          mask-image: url("./shape.svg");
        }
      </style>
    </i>
    <div>
      <style>
        margin-left: 8px;
      </style>
      {children}
    </div>
  </div>
  {media? && <input type="file" {onChange?} {accept?}>
    <style>
      position: absolute;
      width: 100%;
      height: 100%;
      background: black;
      left: 0px;
      top: 0px;
      opacity: 0;
      cursor: pointer;
    </style>
  </input>}
</Select.MenuItem>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 0, y: 0 }
-->
<div export component as="MenuFooter">
  <style>
    border-top: 1px solid rgb(65, 65, 65);
    color: var(--grey-300);
    padding-bottom: 8px;
  </style>
  {children}
</div>


<!--
  @frame { visible: false, width: 1024, height: 768, x: -33, y: -17 }
-->
<div export component as="FileMenuItems">
  <style>
    max-height: 300px;
    overflow-x: hidden;
    overflow-y: auto;
  </style>
  {children}
</div>



<!--
  @frame { visible: false, width: 1024, height: 768, x: 0, y: 0 }
-->
<div export component as="Spacer">
  <style>
    width: 100%;
  </style>
</div>


<!--
  @frame { visible: false, width: 1024, height: 768, x: 0, y: 0 }
-->
<div export component as="RightControls">
  <style>
    display: flex;
    margin-right: 16px;
    & > * {
      margin-left: 8px;
    }
  </style>
  {children}
</div>


<!--
  @frame { visible: false, title: "", width: 1024, height: 768, x: 55, y: 171 }
-->
<Topbar export component as="Preview">
  <FileSelect name="super-log-main file that.pc"
    active={showFileMenu}
    menu={showFileMenu && <FileMenu>
      <FileMenuItems>
        <FileMenuItem>Buttons.pc</FileMenuItem>
        <FileMenuItem>Typography.pc</FileMenuItem>
        <FileMenuItem>Colors.pc</FileMenuItem>
        <FileMenuItem hover
          moreSelect={<MoreFileSelect>
            <MoreFileButton />
          </MoreFileSelect>}>
          Super-long-file-name-that-should-wrap-around.png
        </FileMenuItem>
        <FileMenuItem>Colors.pc</FileMenuItem>
        <FileMenuItem hover>Colors.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>Molecules / Select.pc</FileMenuItem>
        <FileMenuItem>
          <TextInput />
        </FileMenuItem>
      </FileMenuItems>
      <MenuFooter>
        <AddDocumentButton page>Create new page</AddDocumentButton>
        <AddDocumentButton media>Upload file</AddDocumentButton>
      </MenuFooter>
    </FileMenu>} />
  <Spacer />
  <EyeButton />
</Topbar>


<!--
  @frame { width: 1024, height: 768, x: 0, y: 0 }
-->
<Preview />